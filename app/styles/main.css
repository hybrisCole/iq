body {
    background: #fafafa;
    font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
    color: #333;
}

.hero-unit {
    margin: 0 auto;
    max-width: 300px;
    font-size: 18px;
    font-weight: 200;
    line-height: 30px;
    background-color: #eee;
    border-radius: 6px;
    padding: 60px;
}

.hero-unit h1 {
    font-size: 60px;
    line-height: 1;
    letter-spacing: -1px;
}

/*
    icomatic.css
    http://codepen.io/Topcoat/pen/CuxEg
*/
@font-face {
    font-family: 'Icomatic';
    src: url('http://topcoat.io/icons/font/icomatic.eot');
    src: url('http://topcoat.io/icons/font/icomatic.eot?#iefix') format("embedded-opentype"),
    url('http://topcoat.io/icons/font/icomatic.woff') format("woff"),
    url('http://topcoat.io/icons/font/icomatic.ttf') format("truetype"),
    url('http://topcoat.io/icons/font/icomatic.svg#icomatic') format('svg');
}
.icomatic {
    font-family: 'Icomatic','sans-serif';
    line-height: 1;
    text-rendering: optimizeLegibility;
    -webkit-font-feature-settings: "liga", "dlig";
    -ms-font-feature-settings: "liga", "dlig";
    -moz-font-feature-settings: "liga", "dlig";
    -o-font-feature-settings: "liga", "dlig";
    font-feature-settings: "liga", "dlig";
    -webkit-font-smoothing: antialiased;
}
.icomatic-alt {
    margin: -1px;
    border:0;
    padding: 0;
    width: 1px; height: 1px;
    clip: rect(0 0 0 0);
    position: absolute;
    overflow: hidden;
}


.scroller {
    overflow: auto;
    -webkit-overflow-scrolling: touch;
    position: absolute;
    top: 70px;
    bottom: 0px;
    left: 0px;
    right: 0px;
}



/*Topcoat Range*/
.range-input,
.topcoat-range-input,
.topcoat-range-input--vertical {
    padding: 0;
    margin: 0;
    background: transparent;
    border: none;
    box-sizing: border-box;
    background-clip: padding-box;
    vertical-align: top;
    outline: none;
    -webkit-appearance: none;
    width: 100%;
}


/*
  Declarations get duplicated because an invalid selector
  invalidates the entire declaration block
*/

.range-input::-webkit-slider-thumb,
.topcoat-range-input::-webkit-slider-thumb,
.topcoat-range-input--vertical::-webkit-slider-thumb {
    cursor: pointer;
    -webkit-appearance: none;
}

.range-input::-moz-range-thumb,
.topcoat-range-input::-moz-range-thumb,
.topcoat-range-input--vertical::-moz-range-thumb {
    cursor: pointer;
}

.topcoat-range-input,
.topcoat-range-input--vertical {
    border-radius: 6px;
    border: 1px solid #a5a8a8;
    background: #d3d7d7;
    height: 1rem;
    border-radius: 30px;
}

.topcoat-range-input::-moz-range-track,
.topcoat-range-input--vertical::-moz-range-track {
    border-radius: 6px;
    border: 1px solid #a5a8a8;
    background: #d3d7d7;
    height: 1rem;
    border-radius: 30px;
}

/*
  Declarations get duplicated because an invalid selector
  invalidates the entire declaration block
*/

.topcoat-range-input::-webkit-slider-thumb,
.topcoat-range-input--vertical::-webkit-slider-thumb {
    height: 3rem;
    width: 2rem;
    border: 1px solid rgba(0,0,0,0.36);
    border-radius: 6px;
    /* Is base64 the way to go ? */
    /* I don't imagine simulating vertical stripes w/ gradients */ background:url("http://db.tt/q5LHtPKx") center center no-repeat #e5e9e8;
    background-size: 7px 18px;
    box-shadow: inset 0 1px white;
}

.topcoat-range-input::-moz-range-thumb,
.topcoat-range-input--vertical::-moz-range-thumb {
    height: 3rem;
    width: 2rem;
    border: 1px solid rgba(0,0,0,0.36);
    border-radius: 6px; background:url("http://db.tt/q5LHtPKx") center center no-repeat #e5e9e8;
    background-size: 7px 18px;
    box-shadow: inset 0 1px white;
}

.topcoat-range-input--vertical {
    -webkit-transform:rotate(90deg);
    -moz-transform:rotate(90deg);
    -ms-transform:rotate(90deg);
    transform:rotate(90deg);
}

/*
  Active state
*/

.topcoat-range-input:active::-webkit-slider-thumb,
.topcoat-range-input--vertical:active::-webkit-slider-thumb {
    border: 1px solid #0940fd;
    box-shadow: 0 0 0 2px #6fb5f1;
}

input[type=range]:active::-moz-range-thumb {
    border: 1px solid #0940fd;
    box-shadow: 0 0 0 2px #6fb5f1;
}

/*Slider*/

.slider-container{
    overflow: hidden;
    width: 100%;
    position:relative;
}

.slider-contents > .slider-item{
    float:left;
    padding: 0 0.5em;
}



/*View Sliding*/

.slide-left.ng-enter,
.slide-left.ng-leave,
.slide-right.ng-enter,
.slide-right.ng-leave {
    position: absolute;
    top: 0; right: 0; bottom: 0; left: 0;
    background: inherit;
    -ms-transition: .25s ease-in-out;
    -webkit-transition: .25s ease-in-out;
    transition:  .25s ease-in-out;
}


.slide-left.ng-enter {
    z-index: 101;
    -webkit-transform: translateX(100%);
    transform: translateX(100%);
}

.slide-left.ng-enter.ng-enter-active {
    -webkit-transform: translateX(0);
    transform: translateX(0);
}

.slide-left.ng-leave {
    z-index: 100;
    -webkit-transform: translateX(0);
    transform: translateX(0);
}

.slide-left.ng-leave.ng-leave-active {
    -webkit-transform: translateX(-100%);
    transform: translateX(-100%);
}

.slide-right.ng-enter {
    z-index: 100;
    -webkit-transform: translateX(-100%);
    transform: translateX(-100%);
}

.slide-right.ng-enter.ng-enter-active {
    -webkit-transform: translateX(0);
    transform: translateX(0);
}

.slide-right.ng-leave {
    z-index: 101;
    -webkit-transform: translateX(0);
    transform: translateX(0);
}

.slide-right.ng-leave.ng-leave-active {
    -webkit-transform: translateX(100%);
    transform: translateX(100%);
}